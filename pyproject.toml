[tool.poetry]
name = "paidtest"
version = "1.0.0"
description = ""
authors = ["Alexander Borisov <alexandr.borisov31@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.8"
SQLAlchemy = { extras = ["mypy"], version = "^2.0.29" }
uvicorn = "^0.34.0"
alembic = "^1.13.1"
aiosqlite = "^0.20.0"
pydantic-settings = "^2.9.1"
bcrypt = "^4.3.0"
pyjwt = "^2.10.1"

[tool.poetry.group.dev.dependencies]
mypy = "^1.9.0"
bandit = "^1.7.8"
radon = "^6.0.1"
ruff = "^0.4.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
exclude = [
    ".git",
    "__pycache__",
    "migrations",
    ".venv",
]
plugins = "pydantic.mypy,sqlalchemy.ext.mypy.plugin"

[tool.ruff]
line-length = 79
indent-width = 4

[tool.ruff.lint]
select = [
    "E4", "E7", "E9", "F",
    "E", "W", "I", "N",
    "ASYNC", "S", "PL", "T20",
    "RUF", "LOG", "TRY", "TCH",
    "SIM", "SLF", "RET", "PT",
    "PYI", "PIE", "C4", "ANN",
    "ARG", "RSE", "ERA",
    "INP", "B", "PTH"
]

ignore = [
    "N818", # error-suffix-on-exception-name
    "RUF001", # ambiguous-unicode-character-string
    "RUF002", # ambiguous-unicode-character-docstring
    "ANN204", # missing-return-type-special-method
    "B008", # function-call-in-default-argument
    "ANN002", # Missing type annotation for `*args`
    "ANN003", # Missing type annotation for `**kwargs`
    "RUF029",
]

fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"